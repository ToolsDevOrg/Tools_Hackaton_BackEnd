services:
  db:
    image: postgres:17
    container_name: ujin_db_prod
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - ./environments/.env.prod.docker
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: always
    networks:
      - app_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ujin_prod_image
    container_name: ujin_prod
    env_file:
      - ./environments/.env.prod.docker
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 8000:8000
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    networks:
      - app_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: ujin_nginx_image
    container_name: ujin_nginx
    env_file:
      - ./environments/.env.prod.docker
    ports:
      - 80:80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    depends_on:
      app:
        condition: service_healthy
    restart: always
    networks:
      - app_network

volumes:
  postgresdata:

networks:
  app_network:
    driver: bridge
